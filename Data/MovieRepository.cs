using MovieApp.Models;

namespace MovieApp.Data
{
    public static class MovieRepository
    {
        private static List<Movie> _movies = null;

        static MovieRepository()
        {
            _movies = new List<Movie>()
            {
                new Movie(){ Id = 1, Name="13 Going on 30", CategoryId=2, Description="Jenna Rink makes an unusual wish on her birthday. Miraculously,her wish comes true and the 13-year-old Jenna wakes up the next day as a 30-year-old woman.",ImageUrl="1.png",Detail="After total humiliation at her thirteenth birthday party, Jenna Rink wants to just hide until she's thirty. Thanks to some magic wishing dust, Jenna's prayer has been answered. With a knockout body, a dream apartment, a fabulous wardrobe, an athlete boyfriend, a dream job, and superstar friends, this can't be a better life. Unfortunately, Jenna realizes that this is not what she wanted. The only one that she needs is her childhood best friend, Matt, a boy that she thought destroyed her party. But when she finds him, he's a grown up, and not the same person that she knew"},
                new Movie(){ Id = 2, Name="Wall-E",CategoryId=3, Description="In the distant future, a small waste-collecting robot inadvertently embarks on a space journey that will ultimately decide the fate of mankind.",ImageUrl="2.png",Detail="<p>In a distant, but not so unrealistic, future where mankind has abandoned earth because it has become covered with trash from products sold by the powerful multi-national Buy N Large corporation, WALL-E, a garbage collecting robot has been left to clean up the mess. Mesmerized with trinkets of Earth's history and show tunes, WALL-E is alone on Earth except for a sprightly pet cockroach.</p> </p> One day, EVE, a sleek (and dangerous) reconnaissance robot, is sent to Earth to find proof that life is once again sustainable. WALL-E falls in love with EVE.  WALL-E rescues EVE from a dust storm and shows her a living plant he found amongst the rubble. Consistent with her \"directive\", EVE takes the plant and automatically enters a deactivated state except for a blinking green beacon. WALL-E, doesn't understand what has happened to his new friend, but, true to his love, he protects her from wind, rain, and lightning, even as she is unresponsive. One day a massive ship comes to reclaim EVE, but WALL-E, out of love or loneliness, hitches a ride on the outside of the ship to rescue EVE.</p> <p> The ship arrives back at a large space cruise ship, which is carrying all of the humans who evacuated Earth 700 years earlier. The people of Earth ride around this space resort on hovering chairs which give them a constant feed of TV and video chatting. They drink all of their meals through a straw out of laziness and/or bone loss, and are all so fat that they can barely move. When the auto-pilot computer, acting on hastily-given instructions sent many centuries before, tries to prevent the people of Earth from returning by stealing the plant, WALL-E, EVE, the portly captain, and a band of broken robots stage a mutiny.</p>"},
                new Movie(){ Id = 3, Name="Herbie Fully Loaded",CategoryId=1, Description="Maggie Peyton, the new owner of Herbie, Number 53, the free-wheelin' Volkswagen bug with a mind of its own, puts the car through its paces on the road to becoming a NASCAR competitor.",ImageUrl="3.png",Detail="Maggie Peyton is the new owner of Number 53--the free wheelin' Volkswagen bug with a mind of its own; she puts the car through its paces on the road to becoming a NASCAR competitor. As a third-generation member of a NASCAR family, racing is in Maggie Peyton's blood, but her overprotective father Ray Peyton Sr. forbids her to pursue her dream. When Ray Sr. offers Maggie a car as a college-graduation present, he takes her to a junkyard to choose one from an assortment of very used cars. Maggie has her eye on an old Nissan, but a certain rusty, banged-up '63 VW Bug seems to be clamoring for her attention. To her surprise, Maggie leaves the lot with Herbie. As she prepares to leave town for a position with ESPN News, Maggie discovers that Herbie has a mind of his own--and an alternate route for her future."},
                new Movie(){ Id = 4, Name="The Hunger Games",CategoryId=4, Description="Katniss Everdeen voluntarily takes her younger sister's place in the Hunger Games: a televised competition in which two teenagers from each of the twelve Districts of Panem are chosen at random to fight to the death.",ImageUrl="4.png",Detail="In a dystopian future, the totalitarian nation of Panem is divided into 12 districts and the Capitol. Each year two young representatives from each district are selected by lottery to participate in The Hunger Games. Part entertainment, part brutal retribution for a past rebellion, the televised games are broadcast throughout Panem. The 24 participants are forced to eliminate their competitors while the citizens of Panem are required to watch. When 16-year-old Katniss' young sister, Prim, is selected as District 12's female representative, Katniss volunteers to take her place. She and her male counterpart, Peeta, are pitted against bigger, stronger representatives, some of whom have trained for this their whole lives."},
                new Movie(){ Id = 5, Name="A Quiet Place",CategoryId=5, Description="A family struggles for survival in a world where most humans have been killed by blind but noise-sensitive creatures. They are forced to communicate in sign language to keep the creatures at bay.",ImageUrl="5.png",Detail="In a devastated Earth overrun by invincible predators of a possible extraterrestrial origin, the Abbotts are struggling to survive in the desolate urban jungle of New York City: a death trap defined by a new era of utter silence. Indeed, as noise attracts this new type of invader, even the slightest of sounds can be deadly. However, even though it's already been twelve months since the powerful monsters' first sightings, the resilient Abbott family still stands strong. In this muted dystopia, learning the rules of survival is crucial. And now, more than ever, the Abbotts must not make a sound."},
                new Movie(){ Id = 6, Name="50 First Dates",CategoryId=2, Description="Henry Roth is a man afraid of commitment until he meets the beautiful Lucy. They hit it off and Henry think he's finally found the girl of his dreams until discovering she has short-term memory loss and forgets him the next day.",ImageUrl="6.png",Detail="Henry Roth lives in a Hawaiian paradise with the company of endless women with no strings attached. This is until he meets Lucy Whitmore. Both Henry and Lucy enjoy the company of each other and feel the start of a serious relationship occurring. Approaching Lucy the next day, Henry is confused when Lucy fails to recognize him. This is the moment Henry discovers that Lucy actually suffers from short term memory loss and can't remember each individual day. Henry won't let this stop him and is prepared to make her fall in love with him all over again, each and every day."},
                new Movie(){ Id = 7, Name="Shrek",CategoryId=3, Description="A mean lord exiles fairytale creatures to the swamp of a grumpy ogre, who must go on a quest and rescue a princess for the lord in order to get his land back.",ImageUrl="7.png", Detail="When a green ogre named Shrek discovers his swamp has been 'swamped' with all sorts of fairytale creatures by the scheming Lord Farquaad, Shrek sets out with a very loud donkey by his side to 'persuade' Farquaad to give Shrek his swamp back. Instead, a deal is made. Farquaad, who wants to become the King, sends Shrek to rescue Princess Fiona, who is awaiting her true love in a tower guarded by a fire-breathing dragon. But once they head back with Fiona, it starts to become apparent that not only does Shrek, an ugly ogre, begin to fall in love with the lovely princess, but Fiona is also hiding a huge secret."},
            };
        }
        public static List<Movie> Movies
        {
            get
            {
                return _movies;
            }
        }

        public static void AddMovie(Movie entity)
        {
            _movies.Add(entity);
        }

        public static Movie GetById(int id)
        {
            return _movies.FirstOrDefault(x => x.Id == id);
        }

    }
}
